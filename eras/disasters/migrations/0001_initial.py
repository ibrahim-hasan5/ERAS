# Generated by Django 5.2.5 on 2025-09-16 17:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_serviceproviderprofile_emergencyresponse_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Disaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('disaster_type', models.CharField(choices=[('earthquake', 'Earthquake'), ('flood', 'Flood'), ('cyclone_storm', 'Cyclone/Storm'), ('wildfire', 'Fire (Wildfire)'), ('landslide', 'Landslide'), ('drought', 'Drought'), ('tsunami', 'Tsunami'), ('natural_other', 'Natural - Others'), ('building_fire', 'Building Fire'), ('industrial_accident', 'Industrial Accident'), ('chemical_spill', 'Chemical Spill'), ('transportation_accident', 'Transportation Accident'), ('bomb_threat', 'Bomb Threat/Explosion'), ('gas_leak', 'Gas Leak'), ('structural_collapse', 'Structural Collapse'), ('manmade_other', 'Man-Made - Others')], max_length=30)),
                ('category', models.CharField(choices=[('natural', 'Natural Disaster'), ('manmade', 'Man-Made Disaster')], max_length=10)),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=10)),
                ('description', models.TextField(help_text='Minimum 50 characters required')),
                ('city', models.CharField(max_length=100)),
                ('area_sector', models.CharField(max_length=100)),
                ('specific_address', models.TextField(blank=True, help_text='Optional specific address')),
                ('landmarks', models.CharField(blank=True, help_text='Nearby landmarks', max_length=200)),
                ('incident_datetime', models.DateTimeField(help_text='When the disaster actually occurred')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact on scene', max_length=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('resolved', 'Resolved'), ('cancelled', 'Cancelled')], default='draft', max_length=15)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_disasters', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_disasters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisasterAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('match_type', models.CharField(choices=[('exact', 'Exact Location Match'), ('city', 'Same City'), ('critical', 'Critical Override')], max_length=20)),
                ('disaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts_sent', to='disasters.disaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='DisasterImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='disaster_images/%Y/%m/%d/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('disaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='disasters.disaster')),
            ],
            options={
                'ordering': ['-is_primary', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DisasterReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('false_info', 'False Information'), ('inappropriate', 'Inappropriate Content'), ('spam', 'Spam'), ('duplicate', 'Duplicate Report'), ('resolved', 'Already Resolved'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('admin_notes', models.TextField(blank=True)),
                ('disaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='disasters.disaster')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisasterResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_status', models.CharField(choices=[('notified', 'Notified'), ('responding', 'Responding'), ('on_scene', 'On Scene'), ('completed', 'Response Completed'), ('cancelled', 'Response Cancelled')], default='notified', max_length=20)),
                ('response_notes', models.TextField(blank=True)),
                ('estimated_arrival', models.DateTimeField(blank=True, null=True)),
                ('actual_arrival', models.DateTimeField(blank=True, null=True)),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='disasters.disaster')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disaster_responses', to='accounts.serviceproviderprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisasterUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('status_change', 'Status Change'), ('content_edit', 'Content Edit'), ('response_added', 'Response Added'), ('resolved', 'Marked as Resolved')], max_length=20)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='disasters.disaster')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='disaster',
            index=models.Index(fields=['status', 'city', 'area_sector'], name='disasters_d_status_80dcf6_idx'),
        ),
        migrations.AddIndex(
            model_name='disaster',
            index=models.Index(fields=['disaster_type', 'severity'], name='disasters_d_disaste_506296_idx'),
        ),
        migrations.AddIndex(
            model_name='disaster',
            index=models.Index(fields=['created_at'], name='disasters_d_created_632a9d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='disasteralert',
            unique_together={('disaster', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='disasterreport',
            unique_together={('disaster', 'reported_by')},
        ),
        migrations.AlterUniqueTogether(
            name='disasterresponse',
            unique_together={('disaster', 'service_provider')},
        ),
    ]
